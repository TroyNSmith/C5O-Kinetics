PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE SMILES (
    smiles_id INTEGER PRIMARY KEY,
    smiles_text TEXT NOT NULL UNIQUE,
    multiplicity INTEGER NOT NULL,
    initial TEXT NOT NULL
);
INSERT INTO SMILES VALUES(1,'O=O',3,unistr('2\u000a\u000aO      0.570474    0.000000    0.000000\u000aO     -0.570474    0.000000    0.000000\u000a'));
INSERT INTO SMILES VALUES(2,'C=C',1,unistr('6\u000a\u000aC      0.655554   -0.035614   -0.006597\u000aC     -0.671061    0.038953    0.005914\u000aH      1.216137   -0.919792    0.272545\u000aH      1.249694    0.823943   -0.310070\u000aH     -1.219556    0.943152   -0.280248\u000aH     -1.230767   -0.850642    0.318456\u000a'));
CREATE TABLE METHODS (
    method_id INTEGER PRIMARY KEY,
    functional TEXT NOT NULL,
    basis TEXT NOT NULL,
    method TEXT NOT NULL,
    inp_template TEXT NOT NULL,
    submit_template TEXT NOT NULL,
    UNIQUE (functional, basis, method)
);
INSERT INTO METHODS VALUES(1,'REVDSD-PBEP86-D4/2021','def2-TZVPP def2-TZVPP/c','OPT NumFreq',unistr('%PAL NPROCS 16 END\u000a%maxcore 750\u000a! REVDSD-PBEP86-D4/2021 def2-TZVPP def2-TZVPP/c OPT NumFreq\u000a* xyzfile 0 [multiplicity] init.xyz\u000a'),unistr('#!/bin/bash\u000a#SBATCH --partition=batch\u000a#SBATCH --gres=lscratch:20\u000a#SBATCH --job-name=[SMILES]_OPT\u000a#SBATCH --nodes=1\u000a#SBATCH --ntasks=16\u000a#SBATCH --ntasks-per-node=16\u000a#SBATCH --cpus-per-task=1\u000a#SBATCH --time=02:00:00\u000a#SBATCH --mem-per-cpu=1G\u000a\u000acd ${SLURM_SUBMIT_DIR}\u000amkdir -p /lscratch/${USER}/${SLURM_JOB_ID}\u000acp -r "${SLURM_SUBMIT_DIR}/." /lscratch/${USER}/${SLURM_JOB_ID}\u000acd /lscratch/${USER}/${SLURM_JOB_ID}\u000a\u000amodule load ORCA/6.1\u000a$(which orca) OPT.inp > OPT.log\u000acp -r /lscratch/${USER}/${SLURM_JOB_ID} ${SLURM_SUBMIT_DIR}\u000arm -rf /lscratch/${USER}/${SLURM_JOB_ID}\u000a'));
INSERT INTO METHODS VALUES(2,'XTB','N/A','GOAT',unistr('%PAL NPROCS 8 END\u000a%maxcore 750\u000a! XTB GOAT\u000a* xyzfile 0 [multiplicity] init.xyz\u000a'),unistr('#!/bin/bash\u000a#SBATCH --partition=batch\u000a#SBATCH --gres=lscratch:10\u000a#SBATCH --job-name=[SMILES]_GOAT\u000a#SBATCH --nodes=1\u000a#SBATCH --ntasks=8\u000a#SBATCH --ntasks-per-node=8\u000a#SBATCH --cpus-per-task=1\u000a#SBATCH --time=00:30:00\u000a#SBATCH --mem-per-cpu=1G\u000a\u000acd ${SLURM_SUBMIT_DIR}\u000amkdir -p /lscratch/${USER}/${SLURM_JOB_ID}\u000acp -r "${SLURM_SUBMIT_DIR}/." /lscratch/${USER}/${SLURM_JOB_ID}\u000acd /lscratch/${USER}/${SLURM_JOB_ID}\u000a\u000amodule load ORCA/6.1\u000a$(which orca) GOAT.inp > GOAT.log\u000acp -r /lscratch/${USER}/${SLURM_JOB_ID} ${SLURM_SUBMIT_DIR}\u000arm -rf /lscratch/${USER}/${SLURM_JOB_ID}\u000a'));
INSERT INTO METHODS VALUES(3,'CCSD(T)-F12/RI','cc-pVDZ-F12 cc-pVDZ-F12-CABS cc-pVTZ/c','CALC',unistr('%PAL NPROCS [num_cpus] END\u000a%maxcore [mem_per_cpu]\u000a! CCSD(T)-F12/RI cc-pVDZ-F12 cc-pVDZ-F12-CABS cc-pVTZ/c\u000a* xyzfile 0 [multiplicity] init.xyz\u000a'),unistr('#!/bin/bash\u000a#SBATCH --partition=batch\u000a#SBATCH --gres=lscratch:[lscratch_size]\u000a#SBATCH --job-name=[SMILES]_CALC\u000a#SBATCH --nodes=1\u000a#SBATCH --ntasks=[num_cpus]\u000a#SBATCH --ntasks-per-node=[num_cpus]\u000a#SBATCH --cpus-per-task=1\u000a#SBATCH --time=[time_requested]\u000a#SBATCH --mem-per-cpu=[mem_per_cpu]G\u000a\u000acd ${SLURM_SUBMIT_DIR}\u000amkdir -p /lscratch/${USER}/${SLURM_JOB_ID}\u000acp -r "${SLURM_SUBMIT_DIR}/." /lscratch/${USER}/${SLURM_JOB_ID}\u000acd /lscratch/${USER}/${SLURM_JOB_ID}\u000a\u000amodule load ORCA/6.1\u000a$(which orca) CALC.inp > CALC.log\u000acp -r /lscratch/${USER}/${SLURM_JOB_ID} ${SLURM_SUBMIT_DIR}\u000arm -rf /lscratch/${USER}/${SLURM_JOB_ID}\u000a'));
CREATE TABLE ENERGIES (
    energy_id INTEGER PRIMARY KEY,
    smiles_id INTEGER REFERENCES SMILES(smiles_id),
    method_id INTEGER REFERENCES Methods(method_id),
    energy_value DOUBLE PRECISION NOT NULL,
    units TEXT DEFAULT 'kcal/mol'
);
CREATE TABLE XYZs (
    xyz_id INTEGER PRIMARY KEY,
    smiles_id INTEGER REFERENCES SMILES(smiles_id),
    method_id INTEGER REFERENCES Methods(method_id),
    xyz_text TEXT NOT NULL
);
CREATE TABLE HESSIANS (
    hessian_id INTEGER PRIMARY KEY,
    smiles_id INTEGER REFERENCES SMILES(smiles_id),
    method_id INTEGER REFERENCES Methods(method_id),
    hessian_data TEXT
);
CREATE TABLE IMAGINARYFREQUENCIES (
    freq_id INTEGER PRIMARY KEY,
    smiles_id INTEGER REFERENCES SMILES(smiles_id),
    method_id INTEGER REFERENCES Methods(method_id),
    frequency DOUBLE PRECISION NOT NULL,
    xyz TEXT NOT NULL
);
CREATE TABLE SCANS (
    scan_id INTEGER PRIMARY KEY,
    smiles_id INTEGER REFERENCES SMILES(smiles_id),
    method_id INTEGER REFERENCES Methods(method_id),
    idx1 INTEGER NOT NULL,
    idx2 INTEGER NOT NULL,
    scan_data TEXT NOT NULL
);
COMMIT;
